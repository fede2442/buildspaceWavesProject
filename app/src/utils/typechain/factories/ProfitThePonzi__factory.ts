/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProfitThePonzi,
  ProfitThePonziInterface,
} from "../ProfitThePonzi";

const _abi = [
  {
    inputs: [],
    name: "AccountIsNotAWinner",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountUnderMinBet",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTicketNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryNumberAlreadySold",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxAmountOfTickets",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketNumber",
        type: "uint256",
      },
    ],
    name: "BoughtTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newLotteryId",
        type: "uint256",
      },
    ],
    name: "NewLotteryStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_superJackpot",
        type: "uint256",
      },
    ],
    name: "SuperJackpot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "vaultAmount",
        type: "uint256",
      },
    ],
    name: "Winner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountWitdrawed",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "amountOfTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketNumber",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketNumber",
        type: "uint256",
      },
    ],
    name: "buyerOfTicket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getJackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getTicketsBoughtBy",
    outputs: [
      {
        internalType: "uint256[10]",
        name: "_tickets",
        type: "uint256[10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTicketsSold",
    outputs: [
      {
        internalType: "uint256[10]",
        name: "_tickets",
        type: "uint256[10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingWinners",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveLoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "soldTicketsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "superJackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061198f806100206000396000f3fe6080604052600436106100e85760003560e01c80639329066c1161008a578063ebcb42ed11610059578063ebcb42ed146102ed578063f408ed6c1461032a578063f6c9ad3814610355578063fb3c46bb1461035f576100e8565b80639329066c1461022f578063e580f47b1461025a578063e886cd1414610285578063eb2dbcf6146102b0576100e8565b806367dd74ca116100c657806367dd74ca146101805780636b31ee011461019c5780636f9fb98a146101c75780639226b0ff146101f2576100e8565b80631209b1f6146100ed5780633e0a51d414610118578063520198a814610155575b600080fd5b3480156100f957600080fd5b5061010261038a565b60405161010f919061163b565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906114c4565b610396565b60405161014c91906115e4565b60405180910390f35b34801561016157600080fd5b5061016a610406565b60405161017791906115ff565b60405180910390f35b61019a600480360381019061019591906114c4565b610510565b005b3480156101a857600080fd5b506101b16107b9565b6040516101be919061163b565b60405180910390f35b3480156101d357600080fd5b506101dc6107bf565b6040516101e9919061163b565b60405180910390f35b3480156101fe57600080fd5b506102196004803603810190610214919061149b565b6107c7565b604051610226919061163b565b60405180910390f35b34801561023b57600080fd5b506102446107df565b604051610251919061163b565b60405180910390f35b34801561026657600080fd5b5061026f6107e9565b60405161027c919061163b565b60405180910390f35b34801561029157600080fd5b5061029a6107f5565b6040516102a7919061163b565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d291906114c4565b6107fa565b6040516102e491906115e4565b60405180910390f35b3480156102f957600080fd5b50610314600480360381019061030f919061149b565b610830565b60405161032191906115ff565b60405180910390f35b34801561033657600080fd5b5061033f61093c565b60405161034c919061163b565b60405180910390f35b61035d610942565b005b34801561036b57600080fd5b50610374610b38565b604051610381919061163b565b60405180910390f35b67016345785d8a000081565b6000806001836103a69190611780565b600a81106103dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61040e61141e565b60005b600a81101561050c57600073ffffffffffffffffffffffffffffffffffffffff16600082600a811061046c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104f9576001816104b6919061169f565b8282600a81106104ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815250505b8080610504906117fd565b915050610411565b5090565b6000811115806105205750600a81115b15610557576040517faeaddff100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060018361057e9190611780565b600a81106105b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610624576040517f5afb4d4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61062d33610b44565b610663576040517f5488147300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a000034146106a4576040517fc34dcda400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600c60008282546106b6919061169f565b925050819055503360006001836106cd9190611780565b600a8110610704577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061074d600a610c2b565b803373ffffffffffffffffffffffffffffffffffffffff1661076f600b610c41565b7fccad0280ccafddab656a5e677bdd9410b465bf9abcec44b45b26de4548cd59ee60405160405180910390a4600a6107a7600a610c41565b14156107b6576107b5610c4f565b5b50565b600c5481565b600047905090565b600e6020528060005260406000206000915090505481565b6000600c54905090565b600b8060000154905081565b600a81565b600081600a811061080a57600080fd5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61083861141e565b60005b600a811015610936578273ffffffffffffffffffffffffffffffffffffffff16600082600a8110610895577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610923576001816108e0919061169f565b8282600a8110610919577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815250505b808061092e906117fd565b91505061083b565b50919050565b600d5481565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116109bb576040517f55ea9f6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a6a906115cf565b60006040518083038185875af1925050503d8060008114610aa7576040519150601f19603f3d011682016040523d82523d6000602084013e610aac565b606091505b5050905080610af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae79061161b565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6560405160405180910390a35050565b600a8060000154905081565b6000806000905060005b600a811015610c1f578373ffffffffffffffffffffffffffffffffffffffff16600082600a8110610ba8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c0c578180610bf190611846565b92505060058260ff161415610c0b57600092505050610c26565b5b8080610c17906117fd565b915050610b4e565b5060019150505b919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000610c59611391565b90506000600182610c6a919061169f565b90506000600182610c7b919061169f565b90506000600f610c8b600b610c41565b610c959190611870565b1415610d4b57600a6009600d54610cac9190611726565b610cb691906116f5565b600c6000828254610cc7919061169f565b92505081905550600a6001600d54610cdf9190611726565b610ce991906116f5565b600d81905550610cf9600b610c41565b7f2e34d1f5f3952891cd0f54ba7d8cafe4c6f94d6cae31617e2288df19764fff75600a6009600d54610d2b9190611726565b610d3591906116f5565b604051610d42919061163b565b60405180910390a25b60326018600c54610d5c9190611726565b610d6691906116f5565b600e60008086600a8110610da3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0e919061169f565b925050819055506032600d600c54610e269190611726565b610e3091906116f5565b600e60008085600a8110610e6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ed8919061169f565b9250508190555060196004600c54610ef09190611726565b610efa91906116f5565b600e60008084600a8110610f37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa2919061169f565b92505081905550600a600c54610fb891906116f5565b600d81905550600e60008085600a8110610ffb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600084600a8110611092577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110d4600b610c41565b7f1c2ae1f7e99dbbbfe25aac964f3889ea68259d88b74709f53037a6fb930bb02a60405160405180910390a4600e60008084600a811061113d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600083600a81106111d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611216600b610c41565b7f1c2ae1f7e99dbbbfe25aac964f3889ea68259d88b74709f53037a6fb930bb02a60405160405180910390a4600e60008083600a811061127f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600082600a8110611316577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611358600b610c41565b7f1c2ae1f7e99dbbbfe25aac964f3889ea68259d88b74709f53037a6fb930bb02a60405160405180910390a461138c6113b0565b505050565b6000600a43446113a191906116f5565b6113ab9190611870565b905090565b6000600c819055506000806113c59190611441565b6113cf600a611411565b6113d9600b610c2b565b6113e3600b610c41565b7f9e157affda43e17eef8b86763820bcb49bf2a976a0a0292b27fcbe249cc5f55560405160405180910390a2565b6000816000018190555050565b604051806101400160405280600a90602082028036833780820191505090505090565b5080600a01906114519190611454565b50565b5b8082111561146d576000816000905550600101611455565b5090565b6000813590506114808161192b565b92915050565b60008135905061149581611942565b92915050565b6000602082840312156114ad57600080fd5b60006114bb84828501611471565b91505092915050565b6000602082840312156114d657600080fd5b60006114e484828501611486565b91505092915050565b60006114f983836115b1565b60208301905092915050565b61150e816117b4565b82525050565b61151d81611660565b6115278184611678565b925061153282611656565b8060005b8381101561156357815161154a87826114ed565b96506115558361166b565b925050600181019050611536565b505050505050565b600061157860128361168e565b9150611583826118ff565b602082019050919050565b600061159b600083611683565b91506115a682611928565b600082019050919050565b6115ba816117e6565b82525050565b6115c9816117e6565b82525050565b60006115da8261158e565b9150819050919050565b60006020820190506115f96000830184611505565b92915050565b6000610140820190506116156000830184611514565b92915050565b600060208201905081810360008301526116348161156b565b9050919050565b600060208201905061165060008301846115c0565b92915050565b6000819050919050565b6000600a9050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006116aa826117e6565b91506116b5836117e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116ea576116e96118a1565b5b828201905092915050565b6000611700826117e6565b915061170b836117e6565b92508261171b5761171a6118d0565b5b828204905092915050565b6000611731826117e6565b915061173c836117e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611775576117746118a1565b5b828202905092915050565b600061178b826117e6565b9150611796836117e6565b9250828210156117a9576117a86118a1565b5b828203905092915050565b60006117bf826117c6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611808826117e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561183b5761183a6118a1565b5b600182019050919050565b6000611851826117f0565b915060ff821415611865576118646118a1565b5b600182019050919050565b600061187b826117e6565b9150611886836117e6565b925082611896576118956118d0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b50565b611934816117b4565b811461193f57600080fd5b50565b61194b816117e6565b811461195657600080fd5b5056fea2646970667358221220c644c18e382a78a242fb07f5b9baa02cbda29c46af5a6d5e054086ba2a7fa80464736f6c63430008040033";

export class ProfitThePonzi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProfitThePonzi> {
    return super.deploy(overrides || {}) as Promise<ProfitThePonzi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProfitThePonzi {
    return super.attach(address) as ProfitThePonzi;
  }
  connect(signer: Signer): ProfitThePonzi__factory {
    return super.connect(signer) as ProfitThePonzi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfitThePonziInterface {
    return new utils.Interface(_abi) as ProfitThePonziInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProfitThePonzi {
    return new Contract(address, _abi, signerOrProvider) as ProfitThePonzi;
  }
}
